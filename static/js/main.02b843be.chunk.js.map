{"version":3,"sources":["components/NumericInputField.js","components/layouts.js","templates/cameraViewParams.js","templates/boxModelParams.js","box.js","App.js","serviceWorker.js","index.js"],"names":["InputField","id","label","value","setField","rangeParams","minVal","maxVal","stepVal","useState","message","setMessage","ref","useRef","handleChange","newValue","validity","current","badInput","isValid","rangeOverflow","rangeUnderflow","stepMismatch","checkValidity","numberValue","parseFloat","isNaN","cleanValue","cleanedValue","newMessage","style","margin","TextField","inputRef","type","inputProps","min","max","step","error","variant","onChange","e","target","helperText","theme","createMuiTheme","palette","SliderInputField","Typography","gutterBottom","Slider","valueLabelDisplay","_","ControlCard","title","children","Card","Box","bgcolor","CardContent","marginBottom","component","InputGroup3","Grid","container","spacing","map","child","key","props","item","sm","ToggleRadioCard","radioValue","option1Label","option2Label","RadioGroup","name","FormControlLabel","control","Radio","Layout","ThemeProvider","CssBaseline","this","React","Component","Side","xs","md","Main","height","width","STATE_PROPS","rx","ry","rz","tx","ty","tz","zoom","INIT_STATE","ID_TO_KEY_MAP","sx","sy","sz","color","radians","thetaDegrees","Math","PI","getSinCos","theta","sin","cos","dot","a","b","x","y","z","vectorFromTo","Vector","getNormalofThreePoints","c","v","n","cross","d","scaleVector","sqrt","multiply4x4","matrixA","matrixB","resultMatrix","dRow","slice","uniformMatrix4x4","i","j","rotXYZ","eulerVec","s","rotX","rotY","rotZ","rxy","transformMatrix","r0","r1","r2","r00","r01","r02","r10","r11","r12","r20","r21","r22","tMatrix","translation","sMatrix","NormalUnitCube","CENTER","POINTS","Cube","scale","translateVec","UNIT_CUBE","rMatrix","t","wrtWorldMatrix","points","renderCube","cube","cubeWrtCameraMatrix","projectionConstant","projectedPoints","transformedPoints","forEach","point","transformedPoint","getTransformedPoint","projectedPoint","getProjectedPoint","push","renderScene","box","cam","PROJECTION_CONSTANT","CAMERA_POSITION","worldWrtCameraMatrix","r","getWorldWrtCameraMatrix","isFrontFacing","whichPlanesFrontFacing","drawBox","POINT_FACE_SET","cameraOriginPoint","pointIds","p","COLORS","OPACITY","data","isFront","index","plane","borderColor","borderOpacity","fillColor","fillOpacity","borderSize","opacity","size","xRange","yRange","consolidateProp","currentState","stateProps","setFunction","Object","keys","reduce","CameraControlView","camProps","NumericInputField","BoxModelControlView","boxProps","App","CAM","cameraViewState","setCameraViewState","BOX","boxModelState","setBoxModelState","isCameraView","setControlUi","showCamera","plotProps","hidden","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.02b843be.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\"\nimport TextField from \"@material-ui/core/TextField\"\n\nconst cleanValue = (newValue, ref, { minVal, maxVal, stepVal }) => {\n    const validity = ref.current.validity\n    const isValid = false\n\n    if (validity.badInput) {\n        return { isValid, message: \"NaN\" }\n    }\n\n    if (validity.rangeOverflow) {\n        return { isValid, message: `max=${maxVal}` }\n    }\n\n    if (validity.rangeUnderflow) {\n        return { isValid, message: `min=${minVal}` }\n    }\n\n    if (validity.stepMismatch) {\n        return { isValid, message: `step=${stepVal}` }\n    }\n\n    if (!ref.current.checkValidity()) {\n        return { isValid, message: \"Error\" }\n    }\n\n    const numberValue = parseFloat(newValue)\n\n    if (isNaN(numberValue)) {\n        return { isValid, message: \"NAN\" }\n    }\n\n    return { isValid: true, message: \"\", value: numberValue }\n}\n\nconst InputField = ({ id, label, value, setField, rangeParams }) => {\n    const { minVal, maxVal, stepVal } = rangeParams\n\n    const [message, setMessage] = useState(\"\")\n    const ref = useRef(null)\n\n    const handleChange = newValue => {\n        const { isValid, value: cleanedValue, message: newMessage } = cleanValue(\n            newValue,\n            ref,\n            rangeParams\n        )\n        if (isValid) {\n            setField(id, cleanedValue)\n        }\n\n        setMessage(newMessage)\n    }\n\n    return (\n        <div style={{ margin: \"5px\" }}>\n            <TextField\n                id={id}\n                label={label}\n                value={value}\n                inputRef={ref}\n                type=\"number\"\n                inputProps={{\n                    min: minVal,\n                    max: maxVal,\n                    step: stepVal,\n                }}\n                error={message === \"\" ? false : true}\n                variant=\"outlined\"\n                onChange={e => handleChange(e.target.value)}\n                helperText={message}\n            />\n        </div>\n    )\n}\n\nexport default InputField\n","import React from \"react\"\nimport { ThemeProvider } from \"@material-ui/styles\"\nimport {\n    Grid,\n    CssBaseline,\n    Typography,\n    createMuiTheme,\n    CardContent,\n    Slider,\n    Card,\n    Radio,\n    RadioGroup,\n    FormControlLabel,\n    Box,\n} from \"@material-ui/core\"\n\nconst theme = createMuiTheme({\n    palette: {\n        type: \"dark\",\n    },\n})\n\nconst SliderInputField = ({ id, label, value, rangeParams, setField }) => {\n    const handleChange = (_, newValue) => setField(id, newValue)\n    return (\n        <>\n            <Typography gutterBottom>{label}</Typography>\n            <Slider\n                {...{\n                    value: typeof value === \"number\" ? value : 0,\n                    step: rangeParams.stepVal,\n                    min: rangeParams.minVal,\n                    max: rangeParams.maxVal,\n                    valueLabelDisplay: \"on\",\n                    onChange: handleChange,\n                }}\n            />\n        </>\n    )\n}\n\nconst ControlCard = ({ title, children }) => (\n    <Card variant=\"outlined\" style={{ margin: \"20px\" }}>\n        <Box bgcolor=\"#333333\">\n            <CardContent>\n                <Typography variant=\"h6\" style={{ marginBottom: \"10px\" }} component=\"h2\">\n                    {title}\n                </Typography>\n                {children}\n            </CardContent>\n        </Box>\n    </Card>\n)\n\nconst InputGroup3 = ({ children }) => {\n    return (\n        <Grid container spacing={1} style={{ marginBottom: \"10px\" }}>\n            {children.map(child => (\n                <Grid key={child.props.id} item sm={4}>\n                    {child}\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n\nconst ToggleRadioCard = ({ radioValue, onChange, option1Label, option2Label }) => (\n    <ControlCard>\n        <RadioGroup name=\"\" value={radioValue} onChange={e => onChange(e.target.value)}>\n            <FormControlLabel value=\"true\" control={<Radio />} label={option1Label} />\n            <FormControlLabel value=\"false\" control={<Radio />} label={option2Label} />\n        </RadioGroup>\n    </ControlCard>\n)\n\nclass Layout extends React.Component {\n    static Side = ({ children }) => (\n        <Grid item xs={12} sm={12} md={4}>\n            {children}\n        </Grid>\n    )\n    static Main = ({ children }) => (\n        <Grid item xs={12} sm={12} md={8}>\n            <Card\n                variant=\"outlined\"\n                style={{\n                    height: \"95vh\",\n                    width: \"95%\",\n                    margin: \"20px\",\n                }}\n            >\n                <div style={{ width: \"100%\", height: \"100vh\" }}>{children}</div>\n            </Card>\n        </Grid>\n    )\n\n    render() {\n        return (\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <Grid container spacing={0}>\n                    {this.props.children}\n                </Grid>\n            </ThemeProvider>\n        )\n    }\n}\n\nexport { Layout, ControlCard, SliderInputField, InputGroup3, ToggleRadioCard }\n","const INIT_STATE = {\n    rx: 0,\n    ry: 0,\n    rz: 0,\n    tx: 0,\n    ty: 0,\n    tz: 0,\n    zoom: 1,\n}\n\n/** THE PROPS REQUIRED FOR EACH INPUT FIELD **/\nconst STATE_PROPS = {\n    rx: {\n        rangeParams: {\n            minVal: -90,\n            maxVal: 90,\n            stepVal: 0.5,\n        },\n        label: \"rotX\",\n        id: \"camera-view-rot-x\",\n    },\n    ry: {\n        rangeParams: {\n            minVal: -90,\n            maxVal: 90,\n            stepVal: 0.5,\n        },\n        label: \"rotY\",\n        id: \"camera-view-rot-z\",\n    },\n    rz: {\n        rangeParams: {\n            minVal: -90,\n            maxVal: 90,\n            stepVal: 0.5,\n        },\n        label: \"rotZ\",\n        id: \"camera-view-rot-y\",\n    },\n    tx: {\n        rangeParams: {\n            minVal: -10,\n            maxVal: 10,\n            stepVal: 0.1,\n        },\n        label: \"t.X\",\n        id: \"camera-view-trans-x\",\n    },\n    ty: {\n        rangeParams: {\n            minVal: -10,\n            maxVal: 10,\n            stepVal: 0.1,\n        },\n        label: \"t.Y\",\n        id: \"camera-view-trans-y\",\n    },\n    tz: {\n        rangeParams: {\n            minVal: -10,\n            maxVal: 10,\n            stepVal: 0.1,\n        },\n        label: \"t.Z\",\n        id: \"camera-view-trans-z\",\n    },\n    zoom: {\n        rangeParams: {\n            minVal: 0,\n            maxVal: 10,\n            stepVal: 0.1,\n        },\n        label: \"zoom\",\n        id: \"camera-view-zoom\",\n    },\n}\n\nconst ID_TO_KEY_MAP = {\n    [STATE_PROPS.rx.id]: \"rx\",\n    [STATE_PROPS.ry.id]: \"ry\",\n    [STATE_PROPS.rz.id]: \"rz\",\n    [STATE_PROPS.tx.id]: \"tx\",\n    [STATE_PROPS.ty.id]: \"ty\",\n    [STATE_PROPS.tz.id]: \"tz\",\n    [STATE_PROPS.zoom.id]: \"zoom\",\n}\n\nexport default { INIT_STATE, STATE_PROPS, ID_TO_KEY_MAP }\n","const INIT_STATE = {\n    rx: 0,\n    ry: 0,\n    rz: 0,\n    tx: 0,\n    ty: 0,\n    tz: 0,\n    sx: 1,\n    sy: 1,\n    sz: 1,\n    color: 0,\n}\n\n/** THE PROPS REQUIRED FOR EACH INPUT FIELD **/\nconst STATE_PROPS = {\n    rx: {\n        rangeParams: {\n            minVal: -180,\n            maxVal: 180,\n            stepVal: 0.5,\n        },\n        label: \"rotX\",\n        id: \"cube-state-rot-x\",\n    },\n    ry: {\n        rangeParams: {\n            minVal: -180,\n            maxVal: 180,\n            stepVal: 0.5,\n        },\n        label: \"rotY\",\n        id: \"cube-state-rot-z\",\n    },\n    rz: {\n        rangeParams: {\n            minVal: -180,\n            maxVal: 180,\n            stepVal: 0.5,\n        },\n        label: \"rotZ\",\n        id: \"cube-state-rot-y\",\n    },\n\n    // ---------------------------\n\n    tx: {\n        rangeParams: {\n            minVal: -100,\n            maxVal: 100,\n            stepVal: 0.1,\n        },\n        label: \"t.X\",\n        id: \"cube-state-trans-x\",\n    },\n    ty: {\n        rangeParams: {\n            minVal: -100,\n            maxVal: 100,\n            stepVal: 0.1,\n        },\n        label: \"t.Y\",\n        id: \"cube-state-trans-y\",\n    },\n    tz: {\n        rangeParams: {\n            minVal: -100,\n            maxVal: 100,\n            stepVal: 0.1,\n        },\n        label: \"t.Z\",\n        id: \"cube-state-trans-z\",\n    },\n\n    // ---------------------------\n\n    sx: {\n        rangeParams: {\n            minVal: 0,\n            maxVal: 10,\n            stepVal: 0.1,\n        },\n        label: \"s.X\",\n        id: \"cube-state-scale-x\",\n    },\n\n    sy: {\n        rangeParams: {\n            minVal: 0,\n            maxVal: 10,\n            stepVal: 0.1,\n        },\n        label: \"s.Y\",\n        id: \"cube-state-scale-y\",\n    },\n    sz: {\n        rangeParams: {\n            minVal: 0,\n            maxVal: 10,\n            stepVal: 0.1,\n        },\n        label: \"s.Z\",\n        id: \"cube-state-scale-z\",\n    },\n    // ---------------------------\n\n    color: {\n        label: \"color\",\n        id: \"cube-color\",\n    },\n}\n\nconst ID_TO_KEY_MAP = {\n    [STATE_PROPS.rx.id]: \"rx\",\n    [STATE_PROPS.ry.id]: \"ry\",\n    [STATE_PROPS.rz.id]: \"rz\",\n\n    [STATE_PROPS.tx.id]: \"tx\",\n    [STATE_PROPS.ty.id]: \"ty\",\n    [STATE_PROPS.tz.id]: \"tz\",\n\n    [STATE_PROPS.sx.id]: \"sx\",\n    [STATE_PROPS.sy.id]: \"sy\",\n    [STATE_PROPS.sz.id]: \"sz\",\n\n    [STATE_PROPS.color.id]: \"color\",\n}\n\nexport default { INIT_STATE, STATE_PROPS, ID_TO_KEY_MAP }\n","const radians = thetaDegrees => (thetaDegrees * Math.PI) / 180\nconst getSinCos = theta => [Math.sin(radians(theta)), Math.cos(radians(theta))]\nconst dot = (a, b) => a.x * b.x + a.y * b.y + a.z * b.z\n\nconst vectorLength = v => Math.sqrt(dot(v, v))\nconst vectorFromTo = (a, b) => new Vector(b.x - a.x, b.y - a.y, b.z - a.z)\nconst scaleVector = (v, d) => new Vector(d * v.x, d * v.y, d * v.z)\n\nconst cross = (a, b) => {\n    const x = a.y * b.z - a.z * b.y\n    const y = a.z * b.x - a.x * b.z\n    const z = a.x * b.y - a.y * b.x\n    return new Vector(x, y, z)\n}\n\nconst getNormalofThreePoints = (a, b, c) => {\n    const ba = vectorFromTo(b, a)\n    const bc = vectorFromTo(b, c)\n    const n = cross(ba, bc)\n    const len_n = vectorLength(n)\n    const unit_n = scaleVector(n, 1 / len_n)\n\n    return unit_n\n}\n\nconst uniformMatrix4x4 = d => {\n    const dRow = [d, d, d, d]\n    return [dRow.slice(), dRow.slice(), dRow.slice(), dRow.slice()]\n}\n\nconst multiply4x4 = (matrixA, matrixB) => {\n    let resultMatrix = uniformMatrix4x4(null)\n\n    for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < 4; j++) {\n            resultMatrix[i][j] =\n                matrixA[i][0] * matrixB[0][j] +\n                matrixA[i][1] * matrixB[1][j] +\n                matrixA[i][2] * matrixB[2][j] +\n                matrixA[i][3] * matrixB[3][j]\n        }\n    }\n\n    return resultMatrix\n}\n\nfunction rotX(theta, tx = 0, ty = 0, tz = 0) {\n    const [s, c] = getSinCos(theta)\n\n    return [\n        [1, 0, 0, tx],\n        [0, c, -s, ty],\n        [0, s, c, tz],\n        [0, 0, 0, 1],\n    ]\n}\n\nfunction rotY(theta) {\n    const [s, c] = getSinCos(theta)\n    return [\n        [c, 0, s, 0],\n        [0, 1, 0, 0],\n        [-s, 0, c, 0],\n        [0, 0, 0, 1],\n    ]\n}\n\nfunction rotZ(theta) {\n    const [s, c] = getSinCos(theta)\n    return [\n        [c, -s, 0, 0],\n        [s, c, 0, 0],\n        [0, 0, 1, 0],\n        [0, 0, 0, 1],\n    ]\n}\n\nconst rotXYZ = eulerVec => {\n    const rx = rotX(eulerVec.x)\n    const ry = rotY(eulerVec.y)\n    const rz = rotZ(eulerVec.z)\n    const rxy = multiply4x4(rx, ry)\n    const rxyz = multiply4x4(rxy, rz)\n    return rxyz\n}\n\nclass Vector {\n    constructor(x, y, z, name) {\n        this.x = x\n        this.y = y\n        this.z = z\n        this.name = name\n    }\n\n    getTransformedPoint(transformMatrix) {\n        const [r0, r1, r2] = transformMatrix.slice(0, 3)\n        const [r00, r01, r02, tx] = r0\n        const [r10, r11, r12, ty] = r1\n        const [r20, r21, r22, tz] = r2\n\n        const newX = this.x * r00 + this.y * r01 + this.z * r02 + tx\n        const newY = this.x * r10 + this.y * r11 + this.z * r12 + ty\n        const newZ = this.x * r20 + this.y * r21 + this.z * r22 + tz\n        return new Vector(newX, newY, newZ, this.name)\n    }\n}\n\nconst tMatrix = translation => [\n    [1, 0, 0, translation.x],\n    [0, 1, 0, translation.y],\n    [0, 0, 1, translation.z],\n    [0, 0, 0, 1],\n]\n\nconst sMatrix = s => [\n    [s.x, 0, 0, 0],\n    [0, s.y, 0, 0],\n    [0, 0, s.z, 0],\n    [0, 0, 0, 1],\n]\n\n/*\n   E4------F5      y\n   |`.    | `.     |\n   |  `A0-----B1   *----- x\n   |   |  |   |     \\\n   G6--|--H7  |      \\\n    `. |   `. |       z\n      `C2-----D3\n*/\nclass NormalUnitCube {\n    CENTER = new Vector(0, 0, 0, \"cube-center\") // cube-center\n    POINTS = [\n        new Vector(-1, +1, +1, \"front-top-left\"), // A0\n        new Vector(+1, +1, +1, \"front-top-right\"), // B1\n        new Vector(-1, -1, +1, \"front-bottom-left\"), // C2\n        new Vector(+1, -1, +1, \"front-bottom-right\"), // D3\n        new Vector(-1, +1, -1, \"back-top-left\"), // E4\n        new Vector(+1, +1, -1, \"back-top-right\"), // F5\n        new Vector(-1, -1, -1, \"back-bottom-left\"), // G6\n        new Vector(+1, -1, -1, \"back-bottom-right\"), // H7\n    ]\n}\n\nclass Cube {\n    UNIT_CUBE = new NormalUnitCube()\n    constructor(\n        eulerVec = new Vector(0, 0, 0),\n        scale = new Vector(1, 1, 1),\n        translateVec = new Vector(0, 0, 0)\n    ) {\n        const rMatrix = rotXYZ(eulerVec)\n        const s = scale\n        const t = translateVec\n        this.wrtWorldMatrix = multiply4x4(tMatrix(t), multiply4x4(sMatrix(s), rMatrix))\n        this.points = this.UNIT_CUBE.POINTS\n    }\n}\n\nconst getWorldWrtCameraMatrix = (\n    translateVec = Vector(0, 0, 0),\n    eulerVec = Vector(0, 0, 0)\n) => {\n    const r = rotXYZ(eulerVec)\n    const t = translateVec\n    // Inverse of rotations matrix\n    // inverse_matrix = rotateCameraMatrixInverse * translateCameraMatrixInverse\n    // world_to_camera_matrix\n    return [\n        [r[0][0], r[1][0], r[2][0], -t.x],\n        [r[0][1], r[1][1], r[2][1], -t.y],\n        [r[0][2], r[1][2], r[2][2], -t.z],\n        [0, 0, 0, 1],\n    ]\n}\nconst getProjectedPoint = (point, projectionConstant) => {\n    return new Vector(\n        (point.x / point.z) * projectionConstant,\n        (point.y / point.z) * projectionConstant,\n        projectionConstant,\n        point.name\n    )\n}\n\nconst renderCube = (cube, cubeWrtCameraMatrix, projectionConstant) => {\n    let projectedPoints = []\n    let transformedPoints = []\n    cube.points.forEach(point => {\n        const transformedPoint = point.getTransformedPoint(cubeWrtCameraMatrix)\n        const projectedPoint = getProjectedPoint(transformedPoint, projectionConstant)\n        transformedPoints.push(transformedPoint)\n        projectedPoints.push(projectedPoint)\n    })\n\n    return [transformedPoints, projectedPoints]\n}\n\n// RENDER SCENE\n\nconst renderScene = (box, cam) => {\n    const Z_TRANSLATE_OFFSET = 5\n    const PROJECTION_CONSTANT = 300 * cam.zoom\n    const CAMERA_POSITION = new Vector(cam.tx, cam.ty, cam.tz + Z_TRANSLATE_OFFSET)\n    const CAMERA_ORIENTATION = new Vector(cam.rx, cam.ry, cam.rz)\n    const worldWrtCameraMatrix = getWorldWrtCameraMatrix(\n        CAMERA_POSITION,\n        CAMERA_ORIENTATION\n    )\n    // euler orientation rotation\n    const r = new Vector(box.rx, box.ry, box.rz)\n    // translate vector\n    const t = new Vector(box.tx, box.ty, box.tz)\n    // scale magnitude\n    const s = new Vector(box.sx, box.sy, box.sz)\n\n    const cube = new Cube(r, s, t)\n    const cubeWrtCameraMatrix = multiply4x4(worldWrtCameraMatrix, cube.wrtWorldMatrix)\n    const [transformedPoints, projectedPoints] = renderCube(\n        cube,\n        cubeWrtCameraMatrix,\n        PROJECTION_CONSTANT\n    )\n\n    const isFrontFacing = whichPlanesFrontFacing(transformedPoints, CAMERA_POSITION)\n    return drawBox(projectedPoints, isFrontFacing)\n}\n\n/*\n   E4------F5      y\n   |`.    | `.     |\n   |  `A0-----B1   *----- x\n   |   |  |   |     \\\n   G6--|--H7  |      \\\n    `. |   `. |       z\n      `C2-----D3\n\nface 1 - A0, B1, D3 | C2 (front)\nface 2 - B1, F5, H7 | D3 (front right)\nface 3 - F5, E4, G6 | H7 (front left)\nface 4 - E4, A0, C2 | G6 (back)\nface 5 - E4, F5, B1 | A0 (top)\nface 6 - C2 , D3, H7 | G6 |(bottom)\n\nIMPORTANT!\nThe second point (ie B1 of set [A0, B1, D3, C2]\nis the center of A0, B1, D3 which is where we will\ncompute the normal of the plane\n*/\n\n// use back face culling to figure out which\n// faces are in front\n\nconst POINT_FACE_SET = [\n    [0, 1, 3, 2],\n    [1, 5, 7, 3],\n    [5, 4, 6, 7],\n    [4, 0, 2, 6],\n    [4, 5, 1, 0],\n    [2, 3, 7, 6],\n]\n// returns an array of booleans with six elements\n// returns if the respective planes defined by the for each set of points (POINT_FACE_SET)\n//  are front facing or not\nconst whichPlanesFrontFacing = (transformedPoints, cameraOriginPoint) => {\n    const t = transformedPoints\n    return POINT_FACE_SET.map(pointIds => {\n        const [a, b, c] = pointIds\n\n        const n = getNormalofThreePoints(t[a], t[b], t[c])\n        const v = vectorFromTo(t[a], cameraOriginPoint)\n        const isFrontFacing = dot(n, v) > 0.0\n\n        return isFrontFacing\n    })\n}\n\nconst drawBox = (projectedPoints, isFrontFacing) => {\n    const p = projectedPoints\n    const container = {\n        color: \"#333333\",\n        opacity: 1.0,\n        xRange: 600,\n        yRange: 600,\n    }\n\n    const COLORS = [\"#32ff7e\", \"#e056fd\", \"#E91E63\", \"#fa8231\", \"#fff200\", \"#ff3838\"]\n    const OPACITY = [0.75, 0.75, 0.75, 0.75, 0.75, 0.75]\n\n    let data = []\n    isFrontFacing.forEach((isFront, index) => {\n        const [a, b, c, d] = POINT_FACE_SET[index]\n        const plane = {\n            x: [p[a].x, p[b].x, p[c].x, p[d].x],\n            y: [p[a].y, p[b].y, p[c].y, p[d].y],\n            borderColor: \"#0652DD\",\n            borderOpacity: 1.0,\n            fillColor: COLORS[index],\n            fillOpacity: OPACITY[index],\n            borderSize: 8,\n            type: \"polygon\",\n            id: `plane-${index}`,\n        }\n        const points = {\n            x: [p[a].x, p[b].x, p[c].x, p[d].x],\n            y: [p[a].y, p[b].y, p[c].y, p[d].y],\n            color: \"#0652DD\",\n            opacity: 1.0,\n            size: 15,\n            type: \"points\",\n            id: `points-${index}`,\n        }\n\n        data = isFront ? [...data, plane, points] : [plane, points, ...data]\n    })\n\n    return { data, container }\n}\n\nexport { Cube, renderScene, drawBox }\n","import React, { useState } from \"react\"\nimport NumericInputField from \"./components/NumericInputField\"\nimport {\n    Layout,\n    ControlCard,\n    SliderInputField,\n    InputGroup3,\n    ToggleRadioCard,\n} from \"./components/layouts\"\nimport CAM from \"./templates/cameraViewParams\"\nimport BOX from \"./templates/boxModelParams\"\nimport BareMinimum2d from \"bare-minimum-2d\"\nimport { renderScene } from \"./box\"\n\n// A helper to build the a set of required props... props that would be\n// be passed to components like SLIDER or INPUT TEXT FIELD\nconst consolidateProp = (currentState, stateProps, setFunction) => {\n    /**\n    consolidatedProps = {\n        rx: {\n            id,\n            label,\n            rangeParams: {maxVal, minVal, stepVal},\n            value,\n            setField,\n        },\n        ry: { ... }\n        ....\n    }\n     **/\n    const consolidatedProps = Object.keys(stateProps).reduce(\n        (props, key) => ({\n            ...props,\n            [key]: {\n                ...stateProps[key],\n                value: currentState[key],\n                setField: setFunction,\n            },\n        }),\n        {}\n    )\n    return consolidatedProps\n}\n\nconst CameraControlView = ({ camProps }) => (\n    <ControlCard title=\"Camera View Control\">\n        <SliderInputField {...camProps.rx} />\n        <SliderInputField {...camProps.ry} />\n        <SliderInputField {...camProps.rz} />\n\n        <SliderInputField {...camProps.tx} />\n        <SliderInputField {...camProps.ty} />\n        <SliderInputField {...camProps.tz} />\n        <NumericInputField {...camProps.zoom} />\n    </ControlCard>\n)\n\nconst BoxModelControlView = ({ boxProps }) => (\n    <ControlCard title=\"Cube View Control\">\n        <SliderInputField {...boxProps.rx} />\n        <SliderInputField {...boxProps.ry} />\n        <SliderInputField {...boxProps.rz} />\n        <InputGroup3>\n            <NumericInputField {...boxProps.tx} />\n            <NumericInputField {...boxProps.ty} />\n            <NumericInputField {...boxProps.tz} />\n        </InputGroup3>\n        <InputGroup3>\n            <NumericInputField {...boxProps.sx} />\n            <NumericInputField {...boxProps.sy} />\n            <NumericInputField {...boxProps.sz} />\n        </InputGroup3>\n        {/*COLOR STATE IS NOT YET IMPLEMENTED FOR NOW */}\n    </ControlCard>\n)\n\nconst App = () => {\n    const [cameraViewState, setCameraViewState] = useState(CAM.INIT_STATE)\n    const [boxModelState, setBoxModelState] = useState(BOX.INIT_STATE)\n    const [isCameraView, setControlUi] = React.useState(\"true\")\n\n    const setCameraViewField = (id, newValue) => {\n        setCameraViewState({ ...cameraViewState, [CAM.ID_TO_KEY_MAP[id]]: newValue })\n    }\n    const setBoxModelField = (id, newValue) => {\n        setBoxModelState({ ...boxModelState, [BOX.ID_TO_KEY_MAP[id]]: newValue })\n    }\n\n    const showCamera = isCameraView === \"true\"\n    const camProps = consolidateProp(cameraViewState, CAM.STATE_PROPS, setCameraViewField)\n    const boxProps = consolidateProp(boxModelState, BOX.STATE_PROPS, setBoxModelField)\n    const plotProps = renderScene(boxModelState, cameraViewState)\n\n    return (\n        <Layout>\n            <Layout.Main>\n                <BareMinimum2d {...plotProps} />\n            </Layout.Main>\n\n            <Layout.Side>\n                <ToggleRadioCard\n                    value={isCameraView}\n                    onChange={setControlUi}\n                    option1Label=\"Cube Control\"\n                    option2Label=\"Camera View Control\"\n                />\n                <div hidden={showCamera}>\n                    <CameraControlView camProps={camProps} />\n                </div>\n                <div hidden={!showCamera}>\n                    <BoxModelControlView boxProps={boxProps} />\n                </div>\n            </Layout.Side>\n        </Layout>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}